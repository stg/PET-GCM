/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("sample")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sample[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("sample[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "sample";
}

SIGNAL("q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("control[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("control")
{
	MEMBERS = "control[6]", "control[5]", "control[4]", "control[3]", "control[2]", "control[1]", "control[0]";
}

TRANSITION_LIST("sample[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("sample[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 78;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
		}
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("sample[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 156;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("sample[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 312;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("sample[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 624;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 7.0;
	}
}

TRANSITION_LIST("sample[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 1249;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
	}
}

TRANSITION_LIST("sample[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2499;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
	}
}

TRANSITION_LIST("sample[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5000;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 13;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 122.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 122.0;
		LEVEL 0 FOR 114.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 112.0;
		LEVEL 0 FOR 108.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 108.0;
		LEVEL 0 FOR 102.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 98.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 94.0;
		LEVEL 0 FOR 91.0;
		LEVEL 1 FOR 37.0;
		LEVEL 0 FOR 38.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 84.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 84.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 78.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 76.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 56.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 56.0;
		LEVEL 0 FOR 58.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 68.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 62.0;
		LEVEL 1 FOR 66.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 127.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 62.0;
			LEVEL 1 FOR 66.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 62.0;
		}
		LEVEL 0 FOR 62.0;
		LEVEL 1 FOR 66.0;
		LEVEL 0 FOR 66.0;
		LEVEL 1 FOR 29.0;
		LEVEL 0 FOR 33.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 112.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 112.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 33.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 88.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 76.0;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 68.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 58.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 62.0;
		LEVEL 0 FOR 58.0;
		LEVEL 1 FOR 56.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 54.0;
		LEVEL 1 FOR 58.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 26.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 46.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 43.0;
		LEVEL 0 FOR 37.0;
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 46.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 42.0;
		LEVEL 0 FOR 42.0;
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 38.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 38.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 38.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 38.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 38.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 36.0;
			LEVEL 1 FOR 36.0;
		}
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 22.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 34.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 127.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 34.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 34.0;
			LEVEL 1 FOR 28.0;
		}
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 34.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 62.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
		}
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 52.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 52.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 47.0;
		LEVEL 0 FOR 33.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 44.0;
		LEVEL 1 FOR 44.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 36.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 26.0;
			LEVEL 0 FOR 26.0;
		}
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 26.0;
		LEVEL 0 FOR 26.0;
		LEVEL 1 FOR 22.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 22.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 23.0;
		LEVEL 0 FOR 21.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 22.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 22.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 22.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 22.0;
		}
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 22.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 18.0;
			LEVEL 0 FOR 18.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 18.0;
			LEVEL 1 FOR 18.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 127.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 18.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 33.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 96.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 48.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 39.0;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 28.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 27.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 24.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 14.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 12.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 14.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 14.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 10.0;
				LEVEL 1 FOR 10.0;
			}
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
		}
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 33.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 48.0;
		LEVEL 1 FOR 48.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 19.0;
		LEVEL 1 FOR 21.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 24.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 23.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 12.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 9.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 12.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 6.0;
				LEVEL 0 FOR 6.0;
			}
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 6.0;
				LEVEL 1 FOR 6.0;
			}
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 6.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 6.0;
				LEVEL 1 FOR 4.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 6.0;
			}
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 96.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 6.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 17.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 32.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 31.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 9.0;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 32.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 8.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 4.0;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 12.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 2.0;
			}
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 4.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 128.0;
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 17.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 32.0;
			LEVEL 0 FOR 32.0;
		}
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 36.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 99.0;
		LEVEL 1 FOR 29.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 11.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 16.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 47;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 2.0;
				LEVEL 0 FOR 2.0;
			}
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4.0;
				LEVEL 0 FOR 4.0;
			}
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 99.0;
		LEVEL 1 FOR 29.0;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 64.0;
		LEVEL 0 FOR 32.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 32.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 33.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 128.0;
			LEVEL 0 FOR 128.0;
		}
		LEVEL 1 FOR 128.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("control[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3200.0;
			LEVEL 1 FOR 3200.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("control[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1600.0;
			LEVEL 1 FOR 1600.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("control[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 800.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("control[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("control[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 17;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 1800.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("control[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 35;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("control[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 70;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1760.0;
		LEVEL 0 FOR 1200.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "control[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q";
	EXPAND_STATUS = EXPANDED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "sample";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "sample[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "sample[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 17;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 7552021;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 7933968;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 7940733;
	MASTER = FALSE;
}
;
